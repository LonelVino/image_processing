Usage:
  "kdu_expand ...
   -i <compressed file>
       Currently accepts raw code-stream files and code-streams wrapped in the
       JP2 or JPX file formats.  We no longer identify the file type based on
       its suffix.  Instead, we first try to open the file as a JP2-family
       file.  If this fails, we open it as a raw code-stream.  The only
       drawback of this approach is that raw code-streams are opened and closed
       twice.
   -o <file 1>,...
       One or more output files. If multiple files are provided, they must be
       separated by commas. Any spaces will be treated as part of the file
       name.  This argument is not mandatory; if no output files are given, the
       decompressor will run completely but produce no image output.  This can
       be useful for timing purposes.  Currently accepted image file formats
       include RAW, BMP, PGM and PPM.  There need not be sufficient image files
       to represent all image components in the code-stream.  Raw files are
       written with the sample bits in the least significant bit positions of
       an 8, 16, 24 or 32 bit word, depending on the bit-depth.  For signed
       data, the word is sign extended. The word organization is big-endian.
   -jpx_layer <compositing layer index>
       By default, the first compositing layer of a JPX file is used to
       determine the colour channels to decompress.  This argument allows you
       to identify a different compositing layer (note that layer indices start
       from 0).  Plain JP2 files are treated as having only one compositing
       layer.  This argument is ignored if the input is a raw code-stream.  It
       is also ignored if `-raw_components' is used.
   -raw_components [<codestream index>]
       By default, when a JP2/JPX file is decompressed, only those components
       which contribute to colour channels in the first compositing layer (or
       the layer identified by `-jpx_layer') are decompressed (one for
       luminance, three for RGB, etc.), applying any required palette mapping
       along the way.  In some cases, however, it may be desirable to
       decompress all of the raw image components available from a code-stream.
        Use this switch to accomplish this.  There will then be no palette
       mapping in this case.  The optional parameter may be used to specify the
       index of the code-stream to be decompressed.  This is relevant only for
       JPX files which may contain multiple code-streams.  By default, the
       first code-stream (index 0) is decompressed.
   -no_seek
       By default, the system will try to exploit pointer information in the
       code-stream to seek over irrelevant elements.  This flag turns this
       behaviour off, which may result in higher memory consumption or even
       failure to read non-linear file formats, but avoids the potential for
       wasted disk accesses.
   -rotate <degrees>
       Rotate source image prior to compression. Must be multiple of 90
       degrees.
   -rate <bits per pixel>
       Maximum bit-rate, expressed in terms of the ratio between the total
       number of compressed bits (including headers) and the product of the
       largest horizontal and  vertical image component dimensions. Note that
       we use the original dimensions of the compressed image, regardless or
       resolution scaling and regions of interest.  Note CAREFULLY that the
       file is simply truncated to the indicated limit, so that the effect of
       the limit will depend strongly upon the packet sequencing order used by
       the code-stream.  The effect of the byte limit may be modified by
       supplying the `-simulate_parsing' flag, described below.
   -simulate_parsing
       If this flag is supplied, discarded resolutions, image components or
       quality layers (see `-reduce' and `-layers') will not be counted when
       applying any rate limit supplied via `-rate' and when reporting overall
       bit-rates.  Also, if a reduced spatial region of the image is required
       (see `-region'), only those bytes which are relevant to that region are
       counted when applying bit-rate limits and reporting overall bit-rates. 
       The effect is intended to be the same as if the code-stream were first
       parsed to remove the resolutions, components, quality layers or
       precincts which are not being used.  Note, however, that this facility
       might not currently work as expected if the image happens to be tiled.
   -skip_components <num initial image components to skip>
       Skips over one or more initial image components, reconstructing as many
       remaining image components as can be stored in the output image file(s)
       specified with "-o" (or all remaining components, if no "-o" argument is
       supplied).  This argument is not meaningful if the input is a JP2/JPX
       file, unless the `-raw_components' switch is also selected.
   -layers <max layers to decode>
       Set an upper bound on the number of quality layers to actually decode.
   -reduce <discard levels>
       Set the number of highest resolution levels to be discarded.  The image
       resolution is effectively divided by 2 to the power of the number of
       discarded levels.
   -region {<top>,<left>},{<height>,<width>}
       Establish a region of interest within the original compressed image. 
       Only the region of interest will be decompressed and the output image
       dimensions will be modified accordingly.  The coordinates of the
       top-left corner of the region are given first, separated by a comma and
       enclosed in curly braces, after which the dimensions of the region are
       given in similar fashion.  The two coordinate pairs must be separated by
       a comma, with no intervening spaces.  All coordinates and dimensions are
       expressed relative to the origin and dimensions of the high resolution
       grid, using real numbers in the range 0 to 1.
   -precise -- forces the use of 32-bit representations.
       By default, 16-bit data representations will be employed for sample data
       processing operations (colour transform and DWT) whenever the image
       component bit-depth is sufficiently small.
   -fussy
       Encourage fussy code-stream parsing, in which most code-stream
       compliance failures will terminate execution, with an appropriate error
       message.
   -resilient
       Encourage error resilient processing, in which an attempt is made to
       recover from errors in the code-stream with minimal degradation in
       reconstructed image quality.  The current implementation should avoid
       execution failure so long as only a single tile-part was used and no
       errors are found in the main or tile header.  The implementation
       recognizes tile-part headers only if the first 4 bytes of the marker
       segment are correct, which makes it extremely unlikely that a
       code-stream with only one tile-part will be mistaken for anything else. 
       Multiple tiles or tile-parts can create numerous problems for an error
       resilient decompressor; complete failure may occur if a multi-tile-part
       code-stream is corrupted.
   -resilient_sop
       Same as "-resilient" except that the error resilient code-stream parsing
       algorithm is informed that it can expect SOP markers to appear in front
       of every single packet, whenever the relevant flag in the Scod style
       byte of the COD marker is set.  The JPEG2000 standard interprets this
       flag as meaning that SOP markers may appear; however, this does not give
       the decompressor any idea where it can expect SOP markers to appear.  In
       most cases, SOP markers, if used, will be placed in front of every
       packet and knowing this a priori can improve the performance of the
       error resilient parser.
   -cpu <coder-iterations>
       Times end-to-end execution and, optionally, the block decoding
       operation, reporting throughput statistics.  If `coder-iterations' is 0,
       the block decoder will not be timed, leading to the most accurate
       end-to-end system execution times.  Otherwise, `coder-iterations' must
       be a positive integer -- larger values will result in more accurate
       estimates of the block decoder processing time, but degrade the accuracy
       of end-to-end execution times.  Note that end-to-end times include image
       file writing, which can have a dominant impact.  To avoid this, you may
       specify no output files at all.
   -mem -- Report memory usage
   -s <switch file>
       Switch to reading arguments from a file.  In the file, argument strings
       are separated by whitespace characters, including spaces, tabs and
       new-line characters.  Comments may be included by introducing a `#' or a
       `%' character, either of which causes the remainder of the line to be
       discarded.  Any number of "-s" argument switch commands may be included
       on the command line.
   -record <file>
       Record code-stream parameters in a file, using the same format which is
       accepted when specifying the parameters to the compressor. Parameters
       specific to tiles which do not intersect with the region of interest
       will not generally be recorded.
   -quiet -- suppress informative messages.
   -version -- print core system version I was compiled against.
   -v -- abbreviation of `-version'
   -usage -- print a comprehensive usage statement.
   -u -- print a brief usage statement."
   
